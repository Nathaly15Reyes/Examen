@page "/revistas-editar/{volumen}"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager



<h3>Revistas</h3>

<EditForm Model="@revista" OnValidSubmit="@Guardar">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col">
            <label for="Titulo">Titulo Libro </label>
            <InputText id="Titulo" @bind-Value="revista.Titulo" class="form-control" />
            <ValidationMessage For="() => revista.Titulo" />
        </div>
        <div class="col">
            <label for="Autor">Autor</label>
            <InputText id="Apellido" @bind-Value="revista.Autor" class="form-control" />
            <ValidationMessage For="() =>revista.Autor" />

        </div>
    </div>
    <div class="row">
        <div class="col-2">
            <label for="Genero">Genero</label>
            <InputText id="Genero" @bind-Value="revista.Genero" class="form-control" />
        </div>
        <div class="col-8">
            <label for="Publicacion">Anio de Publicacion</label>
            <InputText id="Publicacion" @bind-Value="revista.Publicacion" class="form-control" />
        </div>
        <div class="col-2">
            <label for="Volumen">El Volumen</label>
            <InputText id="Volumen" @bind-Value="revista.Volumen" class="form-control" />

        </div>
        <div class="col-2">
            <label for="Numerto">Numero de Ejemplar</label>
            <InputText id="Numero" @bind-Value="revista.Numero" class="form-control" />

        </div>

    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar</button>
    </div>
</EditForm>

@code {

    [Parameter]
    public string volumen { get; set; }
    private Revistas revista = new Revistas();
    List<Revistas> revistas = new List<Revistas>();


    protected async Task Guardar()
    {

        await localStorage.SetItemAsync("revistas", revistas);

        NavigationManager.NavigateTo("/revistas-crear");

    }

    protected override async Task OnInitializedAsync()
    {   //La primera vez que se corre poner en comentarios, pues como no existen datos
        //convierta la lista catedraticos en null
        revistas = await localStorage.GetItemAsync<List<Revistas>>("revistas");

        revista = revistas.Find(c => c.Volumen == volumen);
    }

}
